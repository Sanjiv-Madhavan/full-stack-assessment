// Package scheme provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package scheme

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Defines values for Status.
const (
	Ok        Status = "ok"
	Unhealthy Status = "unhealthy"
)

// Defines values for TaskStatus.
const (
	DONE       TaskStatus = "DONE"
	INPROGRESS TaskStatus = "IN_PROGRESS"
	TODO       TaskStatus = "TODO"
)

// BadRequest Bad Request (malformed JSON or type mismatch)
type BadRequest = interface{}

// Conflict Conflict (e.g., unique constraint)
type Conflict = interface{}

// DefaultError Unexpected error
type DefaultError = interface{}

// Error defines model for Error.
type Error struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

// Health defines model for Health.
type Health struct {
	Status Status `json:"status"`
}

// NewProject defines model for NewProject.
type NewProject struct {
	Name string `json:"name"`
}

// NotFound Resource not found
type NotFound = interface{}

// Project defines model for Project.
type Project struct {
	CreatedAt time.Time          `json:"createdAt"`
	Id        openapi_types.UUID `json:"id"`
	Name      string             `json:"name"`
	UpdatedAt time.Time          `json:"updatedAt"`
}

// Status defines model for Status.
type Status string

// TaskStatus defines model for TaskStatus.
type TaskStatus string

// Unprocessable Validation failed (well-formed request, semantic rules fail)
type Unprocessable = interface{}

// UpdateProject defines model for UpdateProject.
type UpdateProject struct {
	Name *string `json:"name,omitempty"`
}

// CreateProjectJSONRequestBody defines body for CreateProject for application/json ContentType.
type CreateProjectJSONRequestBody = NewProject
